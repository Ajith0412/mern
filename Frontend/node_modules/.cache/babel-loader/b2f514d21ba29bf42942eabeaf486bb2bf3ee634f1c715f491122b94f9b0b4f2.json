{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nconst initialState = {\n  tasksList: [],\n  selectedTask: {},\n  isLoading: false,\n  error: \"\"\n};\nconst BASE_URL = \"http://localhost:4000/api/tasks\";\n//get using react-thunk\n\nexport const getTaskFromServer = createAsyncThunk(\"tasks/getTaskFromServer\", async (_, {\n  rejectWithValue\n}) => {\n  const response = await fetch(BASE_URL);\n  if (response.ok) {\n    const jsonData = await response.json();\n    return jsonData;\n  } else {\n    return rejectWithValue({\n      error: \"No Data Found\"\n    });\n  }\n});\n\n//post using to local server\n\nexport const addTaskFromServer = createAsyncThunk(\"tasks/addTaskFromServer\", async (task, {\n  rejectWithValue\n}) => {\n  const options = {\n    method: 'POST',\n    body: JSON.stringify(task),\n    headers: {\n      \"Content-type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  const response = await fetch(BASE_URL, options);\n  if (response.ok) {\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  } else {\n    return rejectWithValue({\n      error: \"Task Not added\"\n    });\n  }\n});\n\n//Patch using to local server\n\nexport const updateTaskToServer = createAsyncThunk(\"tasks/updateTaskToServer\", async (task, {\n  rejectWithValue\n}) => {\n  console.log(task);\n  const option = {\n    method: \"PATCH\",\n    body: JSON.stringify(task),\n    headers: {\n      \"Content-Type\": \"application/json; charset=UTF-8\"\n    }\n  };\n  const response = await fetch(BASE_URL + \"/\" + task.id, option);\n  if (response.ok) {\n    const jsonResponse = await response.json();\n    return jsonResponse;\n  } else {\n    return rejectWithValue({\n      error: \"Task Not Updated\"\n    });\n  }\n});\n\n//delete using local server -redux thunk\n\nexport const deleteFromServer = createAsyncThunk(\"tasks/deleteFromServer\", async (task, {\n  rejectWithValue\n}) => {\n  const option = {\n    method: \"DELETE\"\n  };\n  const response = await fetch(BASE_URL + \"/\" + task.id, option);\n  if (response.ok) {\n    const jsonREsponse = await response.json();\n    return jsonREsponse;\n  } else {\n    return rejectWithValue({\n      error: \"Task not deleted\"\n    });\n  }\n});\nconst tasksSlice = createSlice({\n  name: \"tasksSlice\",\n  initialState,\n  reducers: {\n    addTaskToList: (state, action) => {\n      const id = Math.random() * 100;\n      let task = {\n        ...action.payload,\n        id\n      };\n      state.tasksList.push(task);\n    },\n    removeTask: (state, action) => {\n      state.tasksList = state.tasksList.filter(task => task.id !== action.payload.id);\n    },\n    updateInTask: (state, action) => {\n      state.tasksList = state.tasksList.map(task => task.id === action.payload.id ? action.payload : task);\n    },\n    selectedInTask: (state, action) => {\n      state.selectedTask = action.payload;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(getTaskFromServer.pending, state => {\n      state.isLoading = true;\n    }).addCase(getTaskFromServer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.tasksList = action.payload;\n    }).addCase(getTaskFromServer.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload.error;\n      state.tasksList = [];\n    }).addCase(addTaskFromServer.pending, state => {\n      state.isLoading = true;\n    }).addCase(addTaskFromServer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = '';\n      state.tasksList.push(action.payload);\n    }).addCase(addTaskFromServer.rejected, (state, action) => {\n      state.error = action.payload.error;\n      state.isLoading = false;\n    }).addCase(updateTaskToServer.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateTaskToServer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n      state.tasksList = state.tasksList.map(task => task.id === action.payload.id ? action.payload : task);\n    }).addCase(updateTaskToServer.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload.error;\n    }).addCase(deleteFromServer.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteFromServer.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.error = \"\";\n    }).addCase(deleteFromServer.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload.error;\n    });\n  }\n});\nexport const {\n  addTaskToList,\n  removeTask,\n  updateInTask,\n  selectedInTask\n} = tasksSlice.actions;\nexport default tasksSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","initialState","tasksList","selectedTask","isLoading","error","BASE_URL","getTaskFromServer","_","rejectWithValue","response","fetch","ok","jsonData","json","addTaskFromServer","task","options","method","body","JSON","stringify","headers","jsonResponse","updateTaskToServer","console","log","option","id","deleteFromServer","jsonREsponse","tasksSlice","name","reducers","addTaskToList","state","action","Math","random","payload","push","removeTask","filter","updateInTask","map","selectedInTask","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["D:/MERN/frontend/src/slices/taskSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\"\r\n\r\n\r\nconst initialState = {\r\n    tasksList: [],\r\n    selectedTask: {},\r\n    isLoading: false,\r\n    error: \"\"\r\n}\r\n\r\nconst BASE_URL = \"http://localhost:4000/api/tasks\"\r\n//get using react-thunk\r\n\r\nexport const getTaskFromServer = createAsyncThunk(\r\n    \"tasks/getTaskFromServer\", async (_, { rejectWithValue }) => {\r\n        const response = await fetch(BASE_URL)\r\n        if (response.ok) {\r\n            const jsonData = await response.json()\r\n            return jsonData\r\n        } else {\r\n            return rejectWithValue({ error: \"No Data Found\" })\r\n        }\r\n    }\r\n)\r\n\r\n//post using to local server\r\n\r\nexport const addTaskFromServer = createAsyncThunk(\r\n    \"tasks/addTaskFromServer\",\r\n    async (task, { rejectWithValue }) => {\r\n        const options = {\r\n            method: 'POST',\r\n            body: JSON.stringify(task),\r\n            headers: {\r\n                \"Content-type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }\r\n        const response = await fetch(BASE_URL, options)\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json()\r\n            return jsonResponse\r\n        } else {\r\n            return rejectWithValue({ error: \"Task Not added\" })\r\n        }\r\n    }\r\n)\r\n\r\n//Patch using to local server\r\n\r\nexport const updateTaskToServer = createAsyncThunk(\r\n    \"tasks/updateTaskToServer\", async (task, { rejectWithValue }) => {\r\n        console.log(task)\r\n        const option = {\r\n            method: \"PATCH\",\r\n            body: JSON.stringify(task),\r\n            headers: {\r\n                \"Content-Type\": \"application/json; charset=UTF-8\"\r\n            }\r\n        }\r\n\r\n        const response = await fetch(BASE_URL + \"/\" + task.id, option)\r\n        if (response.ok) {\r\n            const jsonResponse = await response.json()\r\n            return jsonResponse\r\n        }\r\n        else {\r\n            return rejectWithValue({ error: \"Task Not Updated\" })\r\n        }\r\n    }\r\n)\r\n\r\n//delete using local server -redux thunk\r\n\r\nexport const deleteFromServer = createAsyncThunk(\r\n    \"tasks/deleteFromServer\", async (task, { rejectWithValue }) => {\r\n        const option = {\r\n            method: \"DELETE\",\r\n\r\n        }\r\n        const response = await fetch(BASE_URL + \"/\" + task.id, option)\r\n\r\n        if (response.ok) {\r\n            const jsonREsponse = await response.json()\r\n            return jsonREsponse\r\n        } else {\r\n            return rejectWithValue({ error: \"Task not deleted\" })\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\nconst tasksSlice = createSlice({\r\n    name: \"tasksSlice\",\r\n    initialState,\r\n    reducers: {\r\n        addTaskToList: (state, action) => {\r\n            const id = Math.random() * 100\r\n            let task = { ...action.payload, id }\r\n            state.tasksList.push(task)\r\n        },\r\n        removeTask: (state, action) => {\r\n            state.tasksList = state.tasksList.filter((task) => task.id !== action.payload.id)\r\n        },\r\n        updateInTask: (state, action) => {\r\n            state.tasksList = state.tasksList.map((task) => task.id === action.payload.id ? action.payload : task)\r\n        },\r\n        selectedInTask: (state, action) => {\r\n            state.selectedTask = action.payload\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(getTaskFromServer.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(getTaskFromServer.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.error = \"\"\r\n                state.tasksList = action.payload\r\n            })\r\n            .addCase(getTaskFromServer.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.error = action.payload.error\r\n                state.tasksList = []\r\n            })\r\n\r\n            .addCase(addTaskFromServer.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(addTaskFromServer.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.error = ''\r\n                state.tasksList.push(action.payload)\r\n            })\r\n            .addCase(addTaskFromServer.rejected, (state, action) => {\r\n                state.error = action.payload.error\r\n                state.isLoading = false\r\n            })\r\n            .addCase(updateTaskToServer.pending, (state) => {\r\n                state.isLoading = true\r\n\r\n            })\r\n            .addCase(updateTaskToServer.fulfilled, (state, action) => {\r\n                state.isLoading = false;\r\n                state.error = \"\"\r\n                state.tasksList = state.tasksList.map((task) => task.id === action.payload.id ? action.payload : task)\r\n            })\r\n            .addCase(updateTaskToServer.rejected, (state, action) => {\r\n                state.isLoading = false;\r\n                state.error = action.payload.error\r\n            })\r\n            .addCase(deleteFromServer.pending, (state) => {\r\n                state.isLoading = true\r\n            })\r\n            .addCase(deleteFromServer.fulfilled, (state, action) => {\r\n                state.isLoading = false\r\n                state.error = \"\"\r\n\r\n            })\r\n            .addCase(deleteFromServer.rejected, (state, action) => {\r\n                state.isLoading = false\r\n                state.error = action.payload.error\r\n            })\r\n    }\r\n})\r\n\r\nexport const { addTaskToList, removeTask, updateInTask, selectedInTask } = tasksSlice.actions\r\nexport default tasksSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}